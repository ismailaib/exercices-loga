




/////////////EXERCICE 31/////////////////////

Ecrire un algorithme qui déclare, remplisse et affiche un tableau de 10
entiers en les mettant tous a zéro.

////////////// SOLUTION //////////////////////

Algorithme Tableau

Variables
     tableau T[10] : entier
     i : entier
Début
    pour i <-- 0 a 9 faire
       T[i] <-- 0
    fin pour   
    pour i <-- 0 a 9 faire
       Ecrire (T[i])
    fin pour  
Fin




/////////////EXERCICE 32/////////////////////

Ecrire un algorithme qui déclare, remplisse et affiche un tableau
contenant les six voyelles de l'alphabet francais.

////////////// SOLUTION //////////////////////

Algorithme suite Tableau

Variables
    tableau T[6] : entier
     i : entier
Début
    T[1] <-- "A"
    T[2] <-- "U"
    T[3] <-- "Y"
    T[4] <-- "O"
    T[5] <-- "I"
    T[6] <-- "E"
    pour i <-- 0 a 5 faire
       Ecrire (T[i])
    fin pour  

    FinPour   
Fin





/////////////EXERCICE 33/////////////////////
Ecrire un algorithme qui demande a l'utilisateur de saisir 10 réels stockés
dans un tableau, puis l’algorithme calcule et affiche la somme, le produit
et la moyenne des éléments du tableau.

////////////// SOLUTION //////////////////////

Algorithme suite Tableau

Variables
    i : Entier
    P, S, M, T[10]: Reel
Début
    pour i <-- 0 a 9 pas 1 fair
    Ecrire(donner un nombre)
    Lire(T[i])
    finpour
    S <-- 0
    P <-- 1
    pour i <-- 0 a 9 Faire
    S <-- T[i] + S
    finpour
    pour i <-- 0 a 9 Faire
    P <-- T[i] * P
    finpour
    M <-- S / 10
    Ecrire ("La somme est :", S)
    Ecrire ("La produit est :", P)
    Ecrire ("La moyenne est :", M)
Fin







/////////////EXERCICE 34/////////////////////
Ecrire un algorithme qui effectue le produit scalaire de deux vecteurs de
méme taille (3 éléments) représentés par des tableaux a une dimension.

////////////// SOLUTION //////////////////////

Algorithme suite Tableau

Variables
    i, U[3], V[3]: entier 
    P : Reel  
Début
    POUR i <-- 0 a 2 pas 1 FAIRE
    Ecrire(donner les valeur de U)
    Ecrire(donner les valeur de V)
    Lire(U(i))
    Lire(V(i))
    FINPOUR
    P <-- 0
    POUR i <-- 0 A 2 PAS 1 FAIRE
    P <-- P + U(i) * V(i)
    FINPOUR

Fin







/////////////EXERCICE 35/////////////////////
Ecrire un algorithme qui demande a l'utilisateur de saisir 10 entiers qu'on
stocke dans un tableau T. Ensuite, l'algorithme détermine et affiche le
minimum des éléments du tableau T.

////////////// SOLUTION //////////////////////

Algorithme suite Tableau

Variables
    T[10] : Reel
    i, min: entier
Début
    POUR i <-- 0 a 9 pas 1 FAIRE
        Ecrire (donner le nombre T[i])
        Lire (T[i])
    FINPOUR
    min <-- T[0]
    POUR i <-- 0 a 9 pas 1 faire
        SI min > T[i] ALORS
              min <-- T[i]
        FINSI
    FINPOUR    
Fin






/////////////EXERCICE 36/////////////////////
Ecrire un algorithme qui demande a l'utilisateur de saisir 10 entiers qu'on
stocke dans un tableau T. Ensuite, l'algorithme détermine et affiche le
maximum des éléments du tableau T.

////////////// SOLUTION //////////////////////
Algorithme suite Tableau

Variables
    T[10] : Reel
    i, max: entier
Début
    POUR i <-- 0 a 9 pas 1 FAIRE
        Ecrire (donner le nombre T[i])
        Lire (T[i])
    FINPOUR
    max <-- T[0]
    POUR i <-- 0 a 9 pas 1 faire
        SI max < T[i] ALORS
              max <-- T[i]
        FINSI
    FINPOUR    
Fin





/////////////EXERCICE 37/////////////////////
Ecrire un algorithme qui demande a l'utilisateur de saisir de 10 entiers
qu'on stocke dans un tableau_T. Ensuite on redemande a l'utilisateur de
saisir un entier n. l'objectif étant de chercher l'existence du nombre n
dans T, le résultat va s'afficher comme suit :

*  Si n se trouve dans T:"n se trouve dans le tableau".

+ Si n se trouve pas dans T: "n ne se trouve pas dans le_ tableau".
////////////// SOLUTION //////////////////////

Algorithme suite Tableau

Variables
    T[10] : entier
    i, n, x: entier
Début
  POUR i <-- 0 a 9 pas 1 FAIRE
    Ecrire ("donner le nombre", i + 1 ,":")
    Lire(T[i])
    Ecrire ("donner la valeur de n :")
    Lire(n)
  FINPOUR
  x <-- 0 
  POUR i <-- 0 a 9 pas 1 FAIRE
      x <-- x + 1 
  FINPOUR
       SI n = T[i] ALORS
       Ecrire("n se trouve dans le tableau")
       SINON n = T[i] ALORS
       Ecrire("n ne se trouve pas dans le tableau")
       FINSI
    
Fin



/////////////EXERCICE 37/////////////////////
Ecrire un algorithme qui demande a l'utilisateur de saisir 50 entiers qu’on
stocke dans un tableau T. Ensuite on redemande a l'utilisateur de saisir
un entier(n) L'algorithme ensuite va calculer le nombre d'occurrence de n
dans T.
////////////// SOLUTION //////////////////////

Algorithme suite Tableau

Variables
    T[50] : entier
    i, n, x: entier
Début
  POUR i <-- 0 a 49 pas 1 FAIRE
    Ecrire ("donner le nombre", i + 1 ,":")
    Lire(T[i])
    Ecrire ("donner la valeur de n :")
    Lire(n)
  FINPOUR
  x <-- 0 
  POUR i <-- 0 a 49 pas 1 FAIRE
    SI n = T[i] ALORS
      x <-- x + 1 
    FINSI
  FINPOUR
  Ecrire("Le nombre d'occurence de n dans T est ", x )
Fin



/////////////EXERCICE 37/////////////////////
Ecrire un algorithme utilisant une procédure qui permet de saisir un
nombre entier positif et d'afficher un message indiquant si ce nombre
est premier ou pas.
////////////// SOLUTION //////////////////////

Algorithme suite Premier
Procedure premier (N : entier)
    Variables
        i : entier
        estPremier : booleen
    Debut
        estPremier = Vrai
        POUR i <-- 2 a N div 2 pas 1 FAIRE
            SI  N mod i = 0 ALORS
                   estPremier <-- faux
            FINSI 
        FINPOUR       
           SI est Premier = vrai alors
           Ecrire(N , " est un nombre premier ") 
           SINON
           Ecrire(N , " est un nombre non premier ") 
        FINSI
    Fin    
Variables
    N : entier
Début
    Ecrire("donner la valeur de N :")
    Lire(N)
    premier(N)
Fin




/////////////EXERCICE 37/////////////////////
Ecrire un algorithme utilisant une fonction qui demande l'utilisateur
d'entrer un entier, puis l'algorithme compte et affiche le nombre de
chiffres qui composent cet entier.
////////////// SOLUTION //////////////////////

Algorithme nombre

    Fonction nbr-chiffres (N : entier)
        Variables
            nbr : entier
        Debut
            nbr <-- 0
            Repeter
                nbr <-- nbr + 1
                N <-- N div 10
            Jusqu'a N = 0
        Fin

Variables
    N : entier
Debut
    Ecrire("Veuillez saisir la valeur de N : ") 
    Lire(N)
Fin



/////////////EXERCICE 38/////////////////////
Ecrire un algorithme utilisant une fonction qui demande l'utilisateur
d'entrer un entier, puis l'algorithme compte et affiche le nombre de
chiffres qui composent cet entier.
////////////// SOLUTION //////////////////////

Algorithme nombre

    Fonction nbr-chiffres (N : entier)
        Variables
            nbr : entier
        Debut
            nbr <-- 0
            Repeter 
                nbr <-- nbr + 1
                N <-- N div 10
            Jusqu'a N = 0
            Retourne nbr
        Fin

Variables
    N : entier
Debut
    Ecrire("Veuillez saisir la valeur de N : ") 
    Lire(N)
    Ecrire(nbr-chiffres(N))
Fin




/////////////EXERCICE 39/////////////////////
Ecrire un algorithme utilisant une fonction qui demande l'utilisateur
d'entrer un entier, puis l'algorithme compte et affiche le nombre de
chiffres qui composent cet entier.
////////////// SOLUTION //////////////////////

Algorithme nombre

    Procedure tab-multi (x : entier)
        Variables
            i : entier
        Debut    
            POUR i<-- 0 à 10 pas 1 faire
                Ecrire (i, "*" , x , "=" , i*x)
            FINPOUR    

        Fin

Variables
    N : entier
Debut
    Ecrire("Veuillez saisir la valeur de N : ") 
    Lire(N)
Fin



/////////////EXERCICE 39/////////////////////
Ecrire un algorithme utilisant des fonctions ou des procédures qui demande à 
l'utilisateur de saisir le rayon du cercle, puis l'algorithme 
affiche le diamètre, la surface et le périmètre du cercle.
////////////// SOLUTION //////////////////////

Algorithme nombre
    Fonction diametre (  R : Reel) : Reel
        Variables
           D : Reel
        Debut
           D <-- R * 2
           Retourne D
        Fin
    Fonction surface (  R : Reel) : Reel
        Variables
           S : Reel
        Debut
           S <-- R * R * 3.14
           Retourne S
        Fin
    Fonction périmètre (  R : Reel) : Reel
        Variables
           P : Reel
        Debut
           P <-- R * 2 * 1.14
           Retourne P
        Fin

Variables
    N : entier
Debut
    Ecrire("Veuillez saisir la valeur de N : ") 
    Lire(N)
    Ecrire("Le diamètre du cercle est : " , diametre(R)) 
    Ecrire("La surface du cercle est : " , surface(R)) 
    Ecrire("Le périmètre du cercle est : ", perimetre(R))
Fin




/////////////EXERCICE 40/////////////////////
Ecrire un algorithme qui affiche la ou les solutions d’une équation du
second degré de la forme ax*x + b*x +c. Utiliser une fonction pour calculer
le discriminant Delta et une - procédure pour afficher les solution selon
delta.
PS: Pour calculer la racine carrée d'un nombre, nous utilisons la fonction :(sqrt.
////////////// SOLUTION //////////////////////

Algorithme nombre
    Fonction discriminant (a ,b ,c : Reel )
        Variables
            delta : Reel
        Debut
            delta <-- (b^2) - 4*a * c
            Retourne delta
        Fin
    Procedure Solution (a ,b ,c ,delta : Reel )
        Variables
            delta : Reel
            x : Reel
            x1: Reel
            x2:Reel
        Debut
            SI delta < 0 ALORS
               Ecrire("pas de solution Reel")
               SINON SI   delta = 0 
                  x <-- (-b) / (2*a)
                  Ecrire("La solution est : ", x)
               SINON
                  x1 <-- ( -b - sqrt(delta) ) / ( 2*a)
                  x2 <-- ( -b + sqrt(delta) ) / ( 2*a)
                  Ecrire("La solution est : ", x1 , "et" , x2)
            FINSI
          FINSI   
        Fin    
Variables
    a, b , c ,delta : Reel

Debut
 Ecrire("Veuillez saisir les valeurs de a , b et c : ") 
 Lire(a,b,c)
 delta <--  descriminant (a, b, c)
 Solution (a ,b ,c ,delta )

Fin



/////////////EXERCICE 40/////////////////////
Ecrire un algorithme qui demande a 'utilisateur de saisir 10 réels stockés
dans un tableau. Ecrivez ensuite les fonctions et la procédure suivantes:

- Trois fonctions qui permettent de calculer et d’affiche la somme, le
produit et la moyenne des éléments du tableau.

- Une procédure qui détermine et affiche les éléments positifs et négatifs
du tableau.
////////////// SOLUTION //////////////////////


Algorithme Fonction
     Fonction Somme (T: tableau Reel) : Reel
        Variables
           S : Reel
           i : entier
        Debut
        S <-- 0
           POUR i <-- 0 a 9 pas 1 FAIRE
               S <-- S + T[i]
           FINPOUR
        Retourne S
        Fin
     Fonction Produit (T: tableau Reel) : Reel
        Variables
           P : Reel
           i : entier           
        Debut
        P <-- 1
           POUR i <-- 0 a 9 pas 1 FAIRE
               P <-- P + T[i]
           FINPOUR
        Retourne P   
        Fin
     Fonction Moyenne (T: tableau Reel) : Reel
        Variables
           S : Reel
           M : Reel
        Debut
           S <-- Somme (T)
           M  <-- S / 10
        Retourne M
        Fin  
     Procedure Pn   (T: tableau Reel) : Reel
        Variables
           S  ,M: Reel
           i : entier
        Debut
           POUR i <-- 0 a 9 pas 1 FAIRE
               SI T[i] > 0
               Ecrire("Les éléments positifs du tableau sont :")
                 Ecrire(T[i])
               SINON 
               Ecrire("Les éléments positifs du tableau sont :")
                 SI T[i] < 0
                   N <-- N + 1
                   Ecrire("Les éléments Negative du tableau sont :")
                   Ecrire(T[i])
               SINON 
                  N <-- N + 0
                 FINSI
               FINSI 
           FIN POURE
        Fin  
Variables
    Tableau [10] : Reel
    i : entier
Debut
    POUR i <-- 0 a 9 pas 1 FAIRE
       Ecrire("Donner la valeur",i+1,"du tableau :")
       Lire(T[i])
    Ecrire("la somme des nombres est :", Somme (T))
    Ecrire("le produit des nombres est :", Produit (T))
    Ecrire("la Moyenne des nombres est :", Moyenne (T))
    FINPOUR
Fin



/////////////EXERCICE 40/////////////////////
Ecrire un algorithme qui demande l'utilisateur de saisir 10 réels stockés dans
un tableau. Ecrivez ensuite les fonctions suivantes:

- Une fonction qui détermine et affiche le maximum des éléments du tableau.

- Une fonction qui détermine et affiche le minimum des éléments du tableau.

- Une fonction qui renvoie le tableau de méme taille ayant les valeurs dans
lordre inverse
////////////// SOLUTION //////////////////////

Algorithme Tableau
    fonction MIN (Tableau T[10] : Reel) : Reel
      Variables
        T[10] : Reel
        MIN ;i: entier
    Debut 
        min <-- T[0]
        POUR i <-- 0 a 9 PAS 1 FAIRE
           SI min < T[i]
            min <-- T[0]
        FINPOUR
        Retourne MIN
    Fin  
    fonction MAX (Tableau T[10] : Reel) : Reel
      Variables
        T[10] : Reel
        max ;i: entier
    Debut 
        max <-- T[0]
        POUR i <-- 0 a 9 PAS 1 FAIRE
           SI max > T[i]
            max <-- T[0]
        FINPOUR
        Retourne MAX
    Fin  
    fonction INV (Tableau T[10] : Reel) : Reel
      Variables
        Tableau TI : Reel
        i: entier
    Debut 
        POUR i <-- 0 a 9 PAS 1 FAIRE
           TI[9-i] <-- T[i]
        FINPOUR
        Retourne INV
    Fin  
Variables
  Tableau T[10] : Reel
  Tableau TI(10) : réel
Debut
      POUR i <-- 0 a 9 pas 1 FAIRE
       Ecrire("Donner la valeur",i+1,"du tableau :")
       Lire(T[i])
      FINPOUR 
    Ecrire("la Le minimum des éléments du tableau est : ",Minimum(T))
    Ecrire("Le maximum des éléments du tableau est ",Maximum(T))
    TI <-- Inverse(T) I
    Pour 1 <-- 0 à 9 pas 1 faire 
         Ecrire("L'élément "F " i+ 1 , 11 du tableau inversé est 11 F TI(1)) 
    fin Pour
Fin